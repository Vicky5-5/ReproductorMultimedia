@model Logica.ViewModels.UsuarioViewModel

@{
    ViewData["Title"] = "Editar";
}


<br />
<div class="d-flex justify-content-center align-items-center min-vh-100">

    <div class="card p-4 shadow" style="max-width: 700px;">
        <h1>Editar Usuario</h1>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.idUsuario)

            <h4 class="mb-3"><strong>Información del Usuario</strong></h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label><strong>Nombre</strong></label>
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    <label><strong>Email</strong></label>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label><strong>Contraseña</strong></label>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", id = "myInput", placeholder = "Contraseña" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                    <div class="mt-2">
                        <input type="checkbox" id="toggle" class="offscreen" onclick="myFunction()" />
                        <label for="toggle" class="switch"></label> <span class="ml-2">Mostrar contraseña</span>
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label><strong>Estado</strong></label>
                    @Html.DropDownListFor(model => model.Estado, new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Activo", Value = "True" },
                                new SelectListItem { Text = "Inactivo", Value = "False" }
                                }, "Selecciona", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                <label><strong>Fecha de Baja</strong></label>
                @Html.EditorFor(model => model.fechaBaja, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaBaja, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                <label><strong>¿Es Administrador?</strong></label>
                @Html.DropDownListFor(model => model.Administrador, new List<SelectListItem>
                                {
                        new SelectListItem { Text = "Sí", Value = "True" },
                                new SelectListItem { Text = "No", Value = "False" }
                                }, "Selecciona", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Administrador, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row mt-4">
            <div class="col-md-6">
                <button id="boton" type="submit" class="btn btn-success btn-block">
                    <i class="fas fa-save"></i> Guardar
                </button>
            </div>
            <div class="col-md-6">
                @Html.ActionLink("Volver", "Administrador", null, new { @class = "btn btn-secondary btn-block" })
            </div>
        </div>
                }
    </div>
</div>

<!-- Scripts -->
<script>
    function myFunction() {
        var x = document.getElementById("myInput");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }
</script>

<!-- Estilos -->
<style>
    .card {
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        border-radius: 8px;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 35px;
        height: 15px;
        background-color: rgba(0, 0, 0, 0.25);
        border-radius: 22px;
        transition: all 0.3s;
        cursor: pointer;
    }

        .switch::after {
            content: '';
            position: absolute;
            width: 11px;
            height: 11px;
            border-radius: 22px;
            background-color: white;
            top: 2px;
            left: 2px;
            transition: all 0.3s;
        }

    input[type='checkbox']:checked + .switch::after {
        transform: translateX(18px);
    }

    input[type='checkbox']:checked + .switch {
        background-color: #7983ff;
    }

    .offscreen {
        position: absolute;
        left: -9999px;
    }

    #boton {
        border-radius: 5px;
        background-color: green;
        color: white;
        width: 100%;
    }
</style>
