@model Logica.ViewModels.CancionesViewModel
@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Agregar Canción";
}

<h1>Agregar Canción</h1>

<div class="card p-4">
    @using (Html.BeginForm("AgregarCancion", "Canciones", FormMethod.Post, new { @name = "formSubirCancion", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-row">
            <div class="form-group col-md-6">
                <label><strong>Nombre de la canción</strong></label>
                @Html.EditorFor(m => m.Titulo, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre de la canción" } })
                @Html.ValidationMessageFor(m => m.Titulo, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                <label><strong>Artista</strong></label>
                @Html.EditorFor(m => m.Artista, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre del artista" } })
                @Html.ValidationMessageFor(m => m.Artista, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                <label><strong>Álbum</strong></label>
                @Html.EditorFor(m => m.Album, new { htmlAttributes = new { @class = "form-control", placeholder = "Álbum" } })
                @Html.ValidationMessageFor(m => m.Album, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                   <label>Duración (mm:ss)</label>
        @Html.TextBoxFor(m => m.DuracionTexto, new { @class = "form-control", placeholder = "Ej: 03:30" })
        @Html.ValidationMessageFor(m => m.DuracionTexto, "", new { @class = "text-danger" })
   
            </div>
        </div>
        <div class="row" id="fila">
               
                <div class="form-group col-md-6">

                    <h6><strong>Género</strong></h6>
                    <div class="col-md-6">

                        @Html.DropDownListFor(model => model.Genero, 
                        new SelectList(Enum.GetValues(typeof(Logica.Models.Genero))), 
                        "-- Selecciona género --", 
                        new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })

                    </div>

                </div>
                <div class="form-group col-md-6">

                    <h6><strong>Año</strong></h6>
                    <div class="col-md-6">

                        @Html.EditorFor(m => m.Year, new { htmlAttributes = new { @class = "form-control", placeholder = "Año" } })
                        @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })

                    </div>

                </div>
            </div>
        <div class="row" id="fila">
                <div class="form-group col-md-6">
                <label>Archivo MP3</label>
        <input type="file" name="archivo" class="form-control-file" accept=".mp3" />
        @Html.ValidationMessageFor(m => m.ArchivoCancion, "", new { @class = "text-danger" })
   
        </div>
                <div class="form-group col-md-6">
                <label>Carátula</label>
        <input type="file" name="caratula" class="form-control-file" accept="image/*" />
        @Html.ValidationMessageFor(m => m.CaratulaAlbum, "", new { @class = "text-danger" })
   
        </div>
        </div>
        <div class="form-group">
    @Html.HiddenFor(m => m.idCancion)
</div>
        <div class="row" id="fila">
            <div class="form-group col-md-6">
            <button type="button" class="btn btn-dark boton-subir" onclick="mostrarModalSubir()">Crear</button>

            </div>
            <br />

            <div class="col-md-6">
                @Html.ActionLink("Volver", "Administrador","Usuario")
            </div>
        </div>
    }
    @await Html.PartialAsync("Modal/modalVista")

</div>

<!--Vemos la vista previa de la carátula para asegurarnos que es la que queremos subir-->
<img id="previewCaratula" src="#" style="display:none; width: 120px; height: 120px; object-fit:cover;" />

<script>
    document.querySelector("input[name='caratula']").addEventListener("change", function (e) {
        const file = e.target.files[0];
        if (file && file.type.startsWith("image/")) {
            const reader = new FileReader();
            reader.onload = function (ev) {
                const img = document.getElementById("previewCaratula");
                img.src = ev.target.result;
                img.style.display = "block";
            };
            reader.readAsDataURL(file);
        }
    });
    // Función para mostrar el modal de confirmación antes de crear el usuario. Llama a la función mostrarModalConfirmacion con los parámetros adecuados.
    function formSubirCancion() {
        mostrarModalConfirmacion(
            "Confirmar subida",
            "¿Estás seguro de que deseas subir esta canción?",
            "Sí",
            function () {
                document.forms["formCrearUsuario"].submit();
            }
        );
    }

    function mostrarModalSubir(titulo, mensaje, textoBoton, accionCallback) {
        $('#tituloModal').text(titulo);
        $('#mensajeModal').text(mensaje);
        $('#btnConfirmarModal').text(textoBoton);
        $('#btnConfirmarModal').off('click');
        $('#btnConfirmarModal').on('click', function () {
            $('#modalConfirmacion').modal('hide');
            if (typeof accionCallback === 'function') {
                accionCallback();
            }
        });
        $('#modalConfirmacion').modal('show');
    }
</script>
