@model Logica.ViewModels.UsuarioViewModel

@{
    ViewData["Title"] = "Delete";
}

<h1>Eliminar Usuario</h1>
<h3>¿Está seguro de que desea eliminar este usuario?</h3>

<div class="mt-4">
    <h4>Información del Usuario</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Nombre)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Nombre)
        </dd>

        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Password)
        </dt>
        <dd class="col-sm-9">
            @{
                var passwordLength = Model?.Password?.Length ?? 0;
                var maskedPassword = passwordLength > 0 ? new string('*', passwordLength) : "(Sin contraseña)";
            }
            @maskedPassword
        </dd>

        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Estado)
        </dt>
        <dd class="col-sm-9">
            @(Model.Estado ? "Activo" : "Inactivo")
        </dd>

        <dt class="col-sm-3">
            Fecha de Baja
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.fechaBaja)
        </dd>

        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Administrador)
        </dt>
        <dd class="col-sm-9">
            @(Model.Administrador ? "Sí" : "No")
        </dd>
    </dl>

    @using (Html.BeginForm("DeleteConfirmed", "Usuario", FormMethod.Post, new { name = "formEliminarUsuario" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.idUsuario)

        <div class="form-group mt-3">
            <button type="button" class="btn btn-danger" onclick="mostrarModalEliminar()">
                <i class="fa-solid fa-trash"></i> Eliminar
            </button>

            @Html.ActionLink("Cancelar", "Administrador", null, new { @class = "btn btn-secondary ml-2" })
        </div>
    }
    @await Html.PartialAsync("Modal/modalVista")

</div>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<script>
    function myFunction() {
        var x = document.getElementById("myInput");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }
    // Función para mostrar el modal de confirmación antes de crear el usuario. Llama a la función mostrarModalConfirmacion con los parámetros adecuados.
    function mostrarModalEliminar() {
        mostrarModalConfirmacion(
            "Confirmar borrado de usuario",
            "¿Estás seguro de que deseas borrar este usuario?",
            "Sí",
            function () {
                document.forms["formEliminarUsuario"].submit();
            }
        );
    }

    function mostrarModalConfirmacion(titulo, mensaje, textoBoton, accionCallback) {
        $('#tituloModal').text(titulo);
        $('#mensajeModal').text(mensaje);
        $('#btnConfirmarModal').text(textoBoton);
        $('#btnConfirmarModal').off('click');
        $('#btnConfirmarModal').on('click', function () {
            $('#modalConfirmacion').modal('hide');
            if (typeof accionCallback === 'function') {
                accionCallback();
            }
        });
        $('#modalConfirmacion').modal('show');
    }
</script>