@model Logica.ViewModels.UsuarioViewModel

@{
	ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Usuario</h4>
<hr />
<div class="card">
	@using (Html.BeginForm("Create", "Usuario", FormMethod.Post))  // Reemplaza "Usuario" por tu controller real
	{
		@Html.AntiForgeryToken()
		<div class="row" id="card">
			<div class="col-md-4">

				<div class="form-group">
					<h6><strong>Nombre</strong></h6>
					<div class="col-md-10" id="name">
						@Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre Usuario" } })
						@Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					<h6><strong>Email</strong></h6>
					<div class="col-md-10">
						@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Correo electrónico" } })
						@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="form-group">
					<h6><strong>Baja</strong></h6>
					<div class="col-md-10">
						@Html.EditorFor(model => model.fechaBaja, new { htmlAttributes = new { @class = "form-control", placeholder = "Correo electrónico" } })
						@Html.ValidationMessageFor(model => model.fechaBaja, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					<h6><strong>Contraseña</strong></h6>
					<div class="col-md-10">
						@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", id = "myInput", placeholder = "Contraseña" } })
						@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
						<input type="checkbox" id="toggle" class="offscreen" onclick="myFunction()">
						<label for="toggle" class="switch"></label>
					</div>
				</div>

				<div class="form-group vol-md-6">
					<h6><strong>¿Eres Administrador?</strong></h6>
					<div class="col-md-10">
						@Html.DropDownListFor(model => model.Administrador, new List<SelectListItem>()
						{
							new SelectListItem() { Text = "Sí", Value = "True" },
										new SelectListItem() { Text = "No", Value = "False" }
										}, "Selecciona", new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Administrador, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				<input type="submit" value="Create" class="btn btn-primary" />
			</div>
		</div>
	</div>
		}

	<div>
		@Html.ActionLink("Volver", "Administrador")
	</div>
</div>
<style>
	#boton {
		border-radius: 5px;
		background-color: black;
		color: white;
	}

	#card {
		justify-content: left;
		margin-left: 10vw;
	}

	#texto {
		color: grey;
	}

	#name {
		width: 200vw;
	}

	.switch {
		position: relative;
		display: inline-block;
		width: 35px;
		height: 15px;
		background-color: rgba(0, 0, 0, 0.25);
		border-radius: 22px;
		transition: all 0.3s;
	}

		.switch::after {
			content: '';
			position: absolute;
			width: 11px;
			height: 11px;
			border-radius: 22px;
			background-color: white;
			top: 1px;
			left: 1px;
			transition: all 0.3s;
		}

	input[type='checkbox']:checked + .switch::after {
		transform: translateX(20px);
	}

	input[type='checkbox']:checked + .switch {
		background-color: #7983ff;
	}

	.offscreen {
		position: absolute;
		left: -9999px;
	}
</style>
@section Scripts {
	<script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js"></script>
	<script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.19.3/jquery.validate.min.js"></script>
	<script src="https://ajax.aspnetcdn.com/ajax/mvc/5.2.7/jquery.validate.unobtrusive.min.js"></script>
}
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
	function myFunction() {
		var x = document.getElementById("myInput");
		if (x.type === "password") {
			x.type = "text";
		} else {
			x.type = "password";
		}
	}

</script>


